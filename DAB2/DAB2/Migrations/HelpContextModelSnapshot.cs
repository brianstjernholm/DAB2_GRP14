// <auto-generated />
using System;
using DAB2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAB2.Migrations
{
    [DbContext(typeof(HelpContext))]
    partial class HelpContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAB2.Models.AssignmentModel", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherAuId")
                        .HasColumnType("int");

                    b.HasKey("AssignmentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("TeacherAuId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("DAB2.Models.CourseModel", b =>
                {
                    b.Property<int>("CourseModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseModelId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("DAB2.Models.ExerciseModel", b =>
                {
                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Lecture")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("HelpWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentAuId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherAuId")
                        .HasColumnType("int");

                    b.HasKey("Number", "Lecture");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentAuId");

                    b.HasIndex("TeacherAuId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("DAB2.Models.StudentAssignmentModel", b =>
                {
                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<int>("AuId")
                        .HasColumnType("int");

                    b.Property<int>("StudentAssignmentModelId")
                        .HasColumnType("int");

                    b.HasKey("AssignmentId", "AuId");

                    b.HasIndex("AuId");

                    b.ToTable("StudentAssignmentModel");
                });

            modelBuilder.Entity("DAB2.Models.StudentCourseModel", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("AuId")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Semester")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentAuId")
                        .HasColumnType("int");

                    b.HasKey("CourseId", "AuId");

                    b.HasIndex("StudentAuId");

                    b.ToTable("StudentCourseModel");
                });

            modelBuilder.Entity("DAB2.Models.StudentModel", b =>
                {
                    b.Property<int>("AuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DAB2.Models.TeacherModel", b =>
                {
                    b.Property<int>("AuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuId");

                    b.HasIndex("CourseId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("DAB2.Models.AssignmentModel", b =>
                {
                    b.HasOne("DAB2.Models.CourseModel", "Course")
                        .WithMany("Assignments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAB2.Models.TeacherModel", "Teacher")
                        .WithMany("Assignments")
                        .HasForeignKey("TeacherAuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DAB2.Models.ExerciseModel", b =>
                {
                    b.HasOne("DAB2.Models.CourseModel", "Course")
                        .WithMany("Exercises")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAB2.Models.StudentModel", "Student")
                        .WithMany("Exercises")
                        .HasForeignKey("StudentAuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAB2.Models.TeacherModel", "Teacher")
                        .WithMany("Exercises")
                        .HasForeignKey("TeacherAuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DAB2.Models.StudentAssignmentModel", b =>
                {
                    b.HasOne("DAB2.Models.AssignmentModel", "Assignment")
                        .WithMany("StudentAssignments")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAB2.Models.StudentModel", "Student")
                        .WithMany("StudentAssignments")
                        .HasForeignKey("AuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DAB2.Models.StudentCourseModel", b =>
                {
                    b.HasOne("DAB2.Models.CourseModel", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAB2.Models.StudentModel", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentAuId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DAB2.Models.TeacherModel", b =>
                {
                    b.HasOne("DAB2.Models.CourseModel", "Course")
                        .WithMany("Teachers")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
